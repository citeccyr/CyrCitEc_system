#!/usr/bin/perl

use strict;
use warnings;

use Carp qw(confess);
use Cec::Paths;
use Cidig::Peren;
use Cec::Processes;

my $count=$ARGV[0] // 8;
my $dirs=$Cec::Paths::dirs;
my $files=$Cec::Paths::files;
my $script=$files->{'apply_recitex_script'};
my $panu_db_file=$files->{'handle_db'};

my $interval=60;

while(1) {
  print "Let me see if I have more to do ...";
  if(not &check_if_to_do()) {
    print " no.\n";
    exit;
  }
  print " yes\n";
  my $count_running=&Cec::Processes::count_running($script);
  print "I have $count_running processes running\n";
  if($count_running < $count) {
    my $s="nohup $script > /tmp/ar$count_running.log  2> /tmp/ar$count_running.err &";
    print "I run '$s'\n";
    system($s);
  }
  else {
    print "I have $count_running scripts.\n";
    exit;
  }
  print "I sleep $interval seconds ...";
  sleep $interval;
  print " woke up.\n";
}

sub check_if_to_do {
  my $p=Cidig::Peren->new({'check_if_to_do'=>1,
			   'cache_ok'=>0,
			   'verbose'=>1,
			   'force'=>0});
  ## fixme:: this is also in apply_recitex
  my $index_file=&Cidig::Files::find_most_recent_file_in_directory($dirs->{'index'});
  my $to_apply=$files->{'recitex_script'}.' -b '.$files->{'handle_db'};
  my $do_i_have_to_do=$p->apply($to_apply,'\.json$','.reci.xml',[$panu_db_file,$index_file]);
  return $do_i_have_to_do;
}
